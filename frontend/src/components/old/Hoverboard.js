/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

const Model = ({ ...props }) => {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    "/hoverboard_" + props.name + ".glb"
  );
  const { actions } = useAnimations(animations, group);
  useEffect(() => {
    console.log(actions);
    console.log(nodes);
    console.log(materials);
    // actions?.hover.play();
  });
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes["top_emissivevox-0"].geometry}
        material={materials.palette}
        position={[4.4, 1.75, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["thrusters-glassvox-0"].geometry}
        material={materials["palette.001"]}
        position={[-1.9, 1.15, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["thrusters-diffusevox-0"].geometry}
        material={materials["palette.002"]}
        position={[-1.7, 1.15, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["thrusters_emissivevox-0"].geometry}
        material={materials["palette.003"]}
        position={[-1.6, 1.15, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["core-emission"].geometry}
        material={materials["palette.004"]}
        position={[0.25, 1.2, -0.05]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["core-metal"].geometry}
        material={materials["palette.005"]}
        position={[0.25, 1.2, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["thrusters-emission"].geometry}
        material={materials["palette.006"]}
        position={[-0.05, 0.5, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["board-glassvox-0"].geometry}
        material={materials["palette.007"]}
        position={[0.05, 0.95, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.lite.geometry}
        material={materials["palette.008"]}
        position={[0, 1.6, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
};

export default Model;
